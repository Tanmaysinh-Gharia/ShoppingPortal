@model ShoppingPortal.Core.DTOs.CartDto
@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container py-5">
    <h1 class="mb-4">Your Shopping Cart</h1>

    @if (Model.Items.Any())
    {
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr data-product-id="@item.ProductId">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="@item.ImageUrl" alt="@item.ProductName" class="img-thumbnail" style="width: 80px; height: 80px; object-fit: contain;">
                                                    <div class="ms-3">
                                                        <h5 class="mb-0">@item.ProductName</h5>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>$@item.Price.ToString("N2")</td>
                                            <td>
                                                <div class="input-group" style="width: 120px;">
                                                    <button class="btn btn-outline-secondary decrease-quantity" type="button">-</button>
                                                    <input type="number" class="form-control text-center quantity-input" value="@item.Quantity" min="1">
                                                    <button class="btn btn-outline-secondary increase-quantity" type="button">+</button>
                                                </div>
                                            </td>
                                            <td>$@((item.Price * item.Quantity).ToString("N2"))</td>
                                            <td>
                                                <button class="btn btn-danger btn-sm remove-item">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Order Summary</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal</span>
                            <span>$@Model.TotalAmount.ToString("N2")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Total</span>
                            <span>$@Model.TotalAmount.ToString("N2")</span>
                        </div>
                        <a href="/checkout" class="btn btn-primary w-100 mt-3">Proceed to Checkout</a>
                        <button id="clear-cart" class="btn btn-outline-danger w-100 mt-2">Clear Cart</button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="bi bi-cart-x" style="font-size: 5rem; color: #6c757d;"></i>
            <h3 class="mt-3">Your cart is empty</h3>
            <p class="text-muted">Start shopping to add items to your cart</p>
            <a href="/Product" class="btn btn-primary mt-3">Continue Shopping</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Update quantity
            $('.quantity-input').on('change', function() {
                const productId = $(this).closest('tr').data('product-id');
                const newQuantity = parseInt($(this).val());

                if (newQuantity > 0) {
                    updateCartItem(productId, newQuantity);
                } else {
                    $(this).val(1);
                }
            });

            // Increase quantity
            $('.increase-quantity').on('click', function() {
                const input = $(this).siblings('.quantity-input');
                const newVal = parseInt(input.val()) + 1;
                input.val(newVal).trigger('change');
            });

            // Decrease quantity
            $('.decrease-quantity').on('click', function() {
                const input = $(this).siblings('.quantity-input');
                const newVal = parseInt(input.val()) - 1;
                if (newVal >= 1) {
                    input.val(newVal).trigger('change');
                }
            });

            // Remove item
            $('.remove-item').on('click', function() {
                const productId = $(this).closest('tr').data('product-id');
                removeFromCart(productId);
            });

            // Clear cart
            $('#clear-cart').on('click', function() {
                if (confirm('Are you sure you want to clear your cart?')) {
                    clearCart();
                }
            });

            function updateCartItem(productId, quantity) {
                $.post('/Cart/UpdateCartItem', { productId, quantity })
                    .done(function(response) {
                        if (response.success) {
                            location.reload(); // Refresh to show updated cart
                        } else {
                            alert(response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating cart item');
                    });
            }

            function removeFromCart(productId) {
                $.post('/Cart/RemoveFromCart', { productId })
                    .done(function(response) {
                        if (response.success) {
                            if (response.itemCount === 0) {
                                location.reload(); // Refresh to show empty cart
                            } else {
                                $('tr[data-product-id="' + productId + '"]').remove();
                                updateCartSummary(response.cart);
                                updateCartCount(response.itemCount);
                            }
                        } else {
                            alert(response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error removing item from cart');
                    });
            }

            function clearCart() {
                $.post('/Cart/ClearCart')
                    .done(function(response) {
                        if (response.success) {
                            location.reload(); // Refresh to show empty cart
                        } else {
                            alert(response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error clearing cart');
                    });
            }

            function updateCartSummary(cart) {
                // Update the cart summary section with new totals
                // This would need to be implemented based on your cart summary structure
            }

            function updateCartCount(count) {
                // Update the cart count in the navbar
                $('.cart-count').text(count);
            }
        });
    </script>
}   
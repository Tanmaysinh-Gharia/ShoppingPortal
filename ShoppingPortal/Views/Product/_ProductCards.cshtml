@using ShoppingPortal.Core.DTOs
@model ProductDto

<div class="col-md-3 mb-3">
    <div class="card h-100">

        @* Categories Badges *@
        <div class="card-header">
            @foreach (var category in Model.Categories.Take(2))
            {
                <span class="badge bg-secondary me-1">@category.Name</span>
            }
            @if (Model.Categories.Count > 2)
            {
                <span class="badge bg-light text-dark">+@(Model.Categories.Count - 2)</span>
            }
        </div>
        @* Product Info *@
        <div class="image-container" style="width: 100%; height: 200px; display: flex; align-items: center; justify-content: center; overflow: hidden; background: #f8f9fa;">
            <img src="@Model.ImageUrl" class="lazy-load" loading="lazy" style="opacity: 0; transition: opacity 0.3s ease-in-out; width: 80%; height: 100%; object-fit: contain;" onload="this.style.opacity=1;" onerror="this.src='@ViewData["DefaultImage"]'">
        </div>
        <div class="card-body">
            <h5 class="card-title">@Model.Name</h5>
            <p class="text-muted mb-2 text-truncate">@Model.Description</p>
            <div class="d-flex justify-content-between align-items-center">
                <span class="h5 text-primary">@Model.Price.ToString("C")</span>
                <span class="badge bg-@(Model.StockQuantity > 0 ? "success" : "danger")">
                    @(Model.StockQuantity > 0 ? "In Stock" : "Out of Stock")
                </span>
            </div>

            <!-- Add to Cart Section -->

            <div class="input-group cart-controls-in-cart container" style="display: @(Model.IsInCart ? "flex" : "none");width:80%;">
                <button class="btn btn-outline-secondary decrease-quantity" type="button" data-product-id="@Model.ProductId">-</button>
                <input type="number" class="form-control text-center quantity-input"
                       value="@Model.CurrentQuantity"
                       min="1"
                       max="@ShoppingPortal.Core.Constants.ProductConstants.MaxQuantityPerProduct"
                       data-product-id="@Model.ProductId">
                <button class="btn btn-outline-secondary increase-quantity" type="button" data-product-id="@Model.ProductId">+</button>
            </div>

            <div class="mt-3 d-flex">
                <!-- Always render both versions -->

                <div class="cart-controls-in-cart" style="display: @(Model.IsInCart ? "block" : "none")">
                    <button class="btn btn-danger btn-block remove-from-cart" data-product-id="@Model.ProductId">Remove from Cart</button>
                </div>

                <div class="cart-controls-not-in-cart" style="display: @(Model.IsInCart ? "none" : "block")">
                    <button class="btn btn-primary btn-block add-to-cart" data-product-id="@Model.ProductId">Add to Cart</button>
                </div>

                <button class="btn btn-success btn-block place-order" data-product-id="@Model.ProductId" style="margin-left:auto;">Place Order</button>
            </div>
        </div>
    </div>
</div>
@using ShoppingPortal.Core.DTOs
@using ShoppingPortal.Core.Extentions
@using ShoppingPortal.Core.Enums
@model OrderDto

@{
    var orderStatus = Model.Status.ToDisplayString();
    decimal subTotal = 0;
}
<div class="card mb-4 order-card" data-order-id="@Model.OrderId">
    <div class="card-header d-flex justify-content-between align-items-center
                text-header"
         style="background-color: @Model.Status.GetStatusColor()">
        <h5 class="mb-0">
            Order #@Model.OrderId.ToString().Substring(0, 8)
            <span class="badge ms-2">@orderStatus</span>
        </h5>
        <small class="text-muted">Placed On: @Model.CreatedAt.ToString("MMMM dd, yyyy")</small>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h6>Items</h6>
                <ul class="list-group list-group-flush">
                    @foreach (var item in Model.OrderItems)
                    {
                        <li class="list-group-item d-flex justify-content-between">
                            <span>@item.ProductName  <b> x </b>Quantity: @item.Quantity</span>

                            <span class="badge @Model.Status.GetStatusBadgeClass() ms-2">
                                @Model.Status
                            </span>
                            <span>₹ @item.UnitPrice X @item.Quantity (Qty) = ₹ @(item.Quantity * item.UnitPrice)</span>
                        </li>

                        subTotal += item.Quantity * item.UnitPrice;

                    }
                </ul>
            </div>

            <div class="col-md-6">
                <div class="d-flex justify-content-between mb-2">
                    <span>Subtotal:</span>
                    <span>@subTotal</span>
                </div>
                <div class="d-flex justify-content-between mb-2">
                    <span>Shipping:</span>
                    <span>Free( 0 )</span>
                </div>
                <div class="d-flex justify-content-between mb-2">
                    <span>Tax:</span>
                    <span>No Tax</span>
                </div>
                <hr>
                <div class="d-flex justify-content-between fw-bold">
                    <span>Total:</span>
                    <span>@Model.TotalAmount.ToString("C")</span>
                </div>
            </div>
        </div>
    </div>

    <div class="card-footer bg-transparent d-flex justify-content-end">
        @if (Model.Status == OrderStatusEnum.Pending)
        {
            <button class="btn btn-outline-danger cancel-order"
                    data-order-id="@Model.OrderId">
                Cancel Order
            </button>
        }
    </div>
</div>